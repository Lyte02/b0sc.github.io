---
import Container from "./Container.astro"
import Topic from "./Topic.astro"
import Toastify from "toastify-js"
---

<Container>
  <div class="relative flex flex-col items-center md:flex-row" id="contact">
    <Topic
      title="Contact"
      description="NEWSLETTER Launched: Subscribe to get updates on our events and workshops."
    />
  </div>

  <div
    class="relative flex flex-col items-center md:flex-row my-6 bg-zinc-100 rounded-[45px]"
  >
    <div class="row items-center py-12 px-4 md:px-20 md:w-8/12 md:py-10">
      <form class="space-y-8 md:w-full" id="cn-form">
        <input
          id="cn-next"
          type="hidden"
          name="_next"
          value="https://bosc.org.np"
        />
        <input id="cn-template" type="hidden" name="_template" value="box" />
        <input id="cn-captcha" type="hidden" name="_captcha" value="true" />
        <div>
          <strong>Feature your Blog</strong> -- <strong>
            Partner with us</strong
          > -- <strong> Or just say Hi</strong>.
          <br /> You can also mail us at <strong>mail@bosc.org.np</strong> directly.
        </div>
        <div>
          <label for="name" class="block mb-2 text-base font-medium text-black"
            >Name</label
          >
          <input
            type="text"
            id="cn-name"
            name="name"
            class="shadow-sm bg-white border text-black text-base rounded-lg focus:ring-black focus:border-black block w-full p-2.5"
            placeholder="John Doe"
            required
          />
        </div>
        <div>
          <label for="email" class="block mb-2 text-base font-medium text-black"
            >Email</label
          >
          <div
            class="relative flex flex-col items-center justify-between md:flex-row bg-zinc-100 rounded-[45px]"
          >
            <input
              type="email"
              id="cn-email"
              name="email"
              class="block p-3 w-full text-base text-black bg-white rounded-lg border shadow-sm focus:ring-black focus:border-black"
              placeholder="john.doe@gmail.com"
              required
            />
            <button
              id="cn-subs-btn"
              type="submit"
              class="px-4 py-3 m-2 bg-zinc-900 rounded-[14px] justify-center gap-2.5 inline-flex"
            >
              <span
                class="text-center text-white text-xl font-normal leading-7"
              >
                Subscribe
              </span>
            </button>
          </div>
        </div>
        <div class="sm:col-span-2">
          <label
            for="message"
            class="block mb-2 text-base font-medium text-black dark:text-gray-400"
            >Message</label
          >
          <textarea
            id="cn-msg"
            name="message"
            rows="6"
            class="block p-2.5 w-full text-base text-black bg-white rounded-lg shadow-sm border focus:ring-black focus:border-black"
            placeholder="I really like what BOSC is doing! Keep it up."
          ></textarea>
        </div>
        <button
          id="cn-msg-btn"
          type="submit"
          class="w-full py-5 bg-zinc-900 rounded-[14px] justify-center gap-2.5 inline-flex"
        >
          <div class="text-center text-white text-xl font-normal leading-7">
            Send Message
          </div>
        </button>
      </form>
      <script>
        import {
          NotifySuccess,
          NotifyError,
          NotifyMessage,
        } from "../utils/notify"

        function handleSubscribe(data: FormData, subscriptionOnly: boolean) {
          // Remove fields except name and email
          data.delete("message")
          data.delete("_next")
          data.delete("_template")
          data.delete("_captcha")

          const object = Object.fromEntries(data)
          const json = JSON.stringify(object)

          let toast: NotifyMessage
          if (subscriptionOnly) {
            toast = new NotifyMessage("Subscribing...", -1)
            toast.show()
          }
          fetch("https://send.pageclip.co/gkvJhyG5fe5tl24xWfyxR7UrqiJ42zpt", {
            method: "POST",
            body: json,
            headers: {
              "Content-Type": "application/json",
            },
            referrerPolicy: "origin-when-cross-origin",
            mode: "cors",
          })
            .then((response) => {
              console.log("Subscription status:", response.statusText)
              if (subscriptionOnly) {
                if (response.status === 200) {
                  toast.hide()
                  NotifySuccess("Successfully subscribed! ðŸŽ‰")
                }
                // if (response.redirected) {
                //   window.location.href = response.url
                // }
              }
            })
            .catch((error) => {
              toast.hide()
              NotifyError("Unable to subscribe. Still Under Development.")
              console.error("Error during subscription:", error)
            })
        }

        function handleMessage(data: string) {
          // TODO: notifiy the user that the message is being sent and replace message after success response
          // formsubmit is free thus is very slow and unreliable reponse is given regarding cors -- [idk] submissions per month
          // https://web3forms.com/ and https://formspark.io/ are better alternatives with -- 250 submissions per month
          const msg = new NotifyMessage(
            "Sending... Feel free to browse the website.",
            -1
          )
          msg.show()
          fetch("https://formsubmit.co/ajax/8c368e944b0e888ffcb863838e3fbc00", {
            method: "POST",
            body: data,
            mode: "cors",
            headers: {
              "Content-Type": "application/json",
              Accept: "application/json",
            },
            referrerPolicy: "origin-when-cross-origin",
          })
            .then((response) => {
              // console.log("Message Response:", response)
              return response.json()
            })
            .then((data) => {
              console.log("Message Success Response:", data)
              if (data.success) {
                msg.hide()
                NotifySuccess("Message sent successfully!")
              }
            })
            .catch((error) => {
              msg.hide()
              console.error("Error sending message:", error)
              NotifyError("Message partially sent. Still Under Development.")
            })
        }

        document.getElementById("cn-form")?.addEventListener("submit", (e) => {
          e.preventDefault()
          const form = document.getElementById("cn-form") as HTMLFormElement
          const formData = new FormData(form)
          const obj = Object.fromEntries(formData)
          const json = JSON.stringify(obj)
          const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
          const subscriptionOnly = obj.message === ""
          if (
            obj.name === "" ||
            obj.email === "" ||
            !emailRegex.test(obj.email?.toString())
          ) {
            NotifyError("Common! Fill the form correctly.")
            return
          }
          handleSubscribe(formData, subscriptionOnly)
          if (!subscriptionOnly) {
            handleMessage(json)
          }

          // reset state
          form.reset()
          const currentUrl = window.location.href
          const baseUrl = currentUrl.split("?")[0]
          window.history.replaceState({}, "", baseUrl)
        })
      </script>
    </div>
    <div class="hidden md:grid md:justify-items-end md:w-4/12 md:py-2">
      <img src="./clients/contact.svg" alt="c" width="80%" />
    </div>
  </div>
</Container>
