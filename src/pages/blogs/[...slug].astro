---
import Layout from "../../layouts/Layout.astro"
import Container from "../../components/Container.astro"
import { getCollection } from "astro:content"
import { formatDate } from "../../utils/utils"
import "../../styles/global.css"
import type { CollectionEntry } from "astro:content"

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog")
  return blogEntries.map((entry: any) => ({
    params: { slug: entry.slug },
    props: { entry },
  }))
}

const { entry } = Astro.props as { entry: CollectionEntry<"blog"> }

const { Content } = await entry.render()
---

<Layout title={entry.data.title}>
  <main class="space-y-60 mb-60 pt-30">
    <Container>
      <section class="bg-white">
        <div
          class="gap-16 items-center py-8 px-4 mx-auto max-w-screen-xl lg:grid lg:grid-cols-1 lg:py-16 lg:px-6"
        >
          <div class="font-light text-gray-500 sm:text-lg">
            <a
              href="/blogs"
              class="inline-flex items-center font-medium text-black hover:text-lime my-4"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
                class="h-6 w-6"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M7 16l-4-4m0 0l4-4m-4 4h18"
                >
                </path>
              </svg>
              <span class="ml-1 font-bold text-lg">All Articles</span>
            </a>
            <div
              class="md:pr-0 md:pl-0 sm:pl-0 sm:pr-0 xs:pl-0 xs:pr-0 lg:pl-60 lg:pr-60"
            >
              <div class="text-center">
                <h2
                  class="mb-4 text-4xl tracking-tight font-extrabold text-gray-900"
                >
                  {entry.data.title}
                </h2>
                <h3 class="text-lg mb-2">
                  Written by {entry.data.author} on {
                    formatDate(entry.data.pubDate)
                  }
                </h3>
                <br />
              </div>
              <div class="content gap-[20px]">
                <Content />
              </div>
            </div>
          </div>
        </div>
      </section>
    </Container>
  </main>
</Layout>
